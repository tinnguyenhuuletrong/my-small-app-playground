diff --git a/mini-lsm-practices/mini-lsm b/mini-lsm-practices/mini-lsm
--- a/mini-lsm-practices/mini-lsm
+++ b/mini-lsm-practices/mini-lsm
@@ -1 +1 @@
-Subproject commit 296510eaa9914beb2249f0d7ac1d97875f5a0552
+Subproject commit 296510eaa9914beb2249f0d7ac1d97875f5a0552-dirty
diff --git a/tiny-reward-pool-go/cmd/bench/bench_wal_mmap_test.go b/tiny-reward-pool-go/cmd/bench/bench_wal_mmap_test.go
index 51627fc..652d990 100644
--- a/tiny-reward-pool-go/cmd/bench/bench_wal_mmap_test.go
+++ b/tiny-reward-pool-go/cmd/bench/bench_wal_mmap_test.go
@@ -50,7 +50,8 @@ func BenchmarkPoolDrawWithMmapWALCallback(b *testing.B) {
 	}
 
 	proc := processing.NewProcessor(ctx, pool, &processing.ProcessorOptional{
-		FlushAfterNDraw: 10_000,
+		RequestBufferSize: b.N,
+		FlushAfterNDraw:   10_000,
 	})
 
 	var wg sync.WaitGroup
diff --git a/tiny-reward-pool-go/cmd/bench/bench_wal_test.go b/tiny-reward-pool-go/cmd/bench/bench_wal_test.go
index ab8ffb4..62b1b63 100644
--- a/tiny-reward-pool-go/cmd/bench/bench_wal_test.go
+++ b/tiny-reward-pool-go/cmd/bench/bench_wal_test.go
@@ -45,7 +45,8 @@ func BenchmarkPoolDrawWithBasicWALCallback(b *testing.B) {
 	}
 
 	proc := processing.NewProcessor(ctx, pool, &processing.ProcessorOptional{
-		FlushAfterNDraw: 10_000,
+		RequestBufferSize: b.N,
+		FlushAfterNDraw:   10_000,
 	})
 
 	var wg sync.WaitGroup
diff --git a/tiny-reward-pool-go/cmd/cli/main.go b/tiny-reward-pool-go/cmd/cli/main.go
index 7cdf383..0caafd2 100644
--- a/tiny-reward-pool-go/cmd/cli/main.go
+++ b/tiny-reward-pool-go/cmd/cli/main.go
@@ -3,6 +3,7 @@ package main
 import (
 	"fmt"
 	"log/slog"
+	"math"
 	"os"
 	"os/signal"
 	"syscall"
@@ -35,10 +36,12 @@ func main() {
 		os.Exit(1)
 	}
 
-	// fileStorage, err := walstorage.NewFileMMapStorage(walPath)
+	// fileStorage, err := walstorage.NewFileMMapStorage(walPath, walstorage.FileMMapStorageOps{
+	// 	MMapFileSizeInBytes: 1024 * 0.5, // 0.5 Kb
+	// })
 	fileStorage, err := walstorage.NewFileStorage(walPath, walstorage.FileStorageOpt{
 		// SizeFileInBytes: 1024 * 1024 * 0.5, // 0.5 MB
-		SizeFileInBytes: 1024 * 0.5, // 0.5 Kb
+		SizeFileInBytes: int(math.Round(1024 * 0.2)), // 0.5 Kb
 	})
 	if err != nil {
 		fmt.Println("Error creating file storage:", err)
diff --git a/tiny-reward-pool-go/internal/processing/processing.go b/tiny-reward-pool-go/internal/processing/processing.go
index 1c06ee4..3759479 100644
--- a/tiny-reward-pool-go/internal/processing/processing.go
+++ b/tiny-reward-pool-go/internal/processing/processing.go
@@ -175,18 +175,15 @@ func (p *Processor) Flush() error {
 		}
 
 		// 2. The buffer is still holding the data that failed to write.
-		//    Let's try flushing it again to the new, empty WAL.
-		flushErr = p.ctx.WAL.Flush()
-		if flushErr != nil {
-			if logger := p.ctx.Utils.GetLogger(); logger != nil {
-				logger.Error("Failed 2nd flush.", "error", flushErr)
-			}
-		}
+		// But it is going to snapshot right away. So safe to discard
+		// B/c now snapshot reflect all wal log
+		p.ctx.WAL.Reset()
 
 		// After a rotation, we create a snapshot.
-		if flushErr == nil {
-			shouldCreateSnapshot = true
-		}
+		shouldCreateSnapshot = true
+
+		// reset error
+		flushErr = nil
 	}
 
 	// Final commit/revert logic based on the outcome.
diff --git a/tiny-reward-pool-go/internal/processing/processing_test.go b/tiny-reward-pool-go/internal/processing/processing_test.go
index d421a79..c135045 100644
--- a/tiny-reward-pool-go/internal/processing/processing_test.go
+++ b/tiny-reward-pool-go/internal/processing/processing_test.go
@@ -188,6 +188,7 @@ func (m *mockWAL) LogDraw(item types.WalLogDrawItem) error {
 	return nil
 }
 func (m *mockWAL) Close() error        { return nil }
+func (m *mockWAL) Reset()              {}
 func (m *mockWAL) Rotate(string) error { return nil }
 func (m *mockWAL) Flush() error {
 	m.flushCount++
diff --git a/tiny-reward-pool-go/internal/rewardpool/pool.go b/tiny-reward-pool-go/internal/rewardpool/pool.go
index 114f1a1..40fd8db 100644
--- a/tiny-reward-pool-go/internal/rewardpool/pool.go
+++ b/tiny-reward-pool-go/internal/rewardpool/pool.go
@@ -109,7 +109,8 @@ func (p *Pool) SelectItem(ctx *types.Context) (string, error) {
 
 // CommitDraw finalizes a staged draw
 func (p *Pool) CommitDraw() {
-	p.pendingDraws = make(map[string]int)
+	// p.pendingDraws = make(map[string]int)
+	clear(p.pendingDraws)
 }
 
 // RevertDraw cancels a staged draw
@@ -117,7 +118,8 @@ func (p *Pool) RevertDraw() {
 	for itemID, count := range p.pendingDraws {
 		p.selector.Update(itemID, int64(count)) // Re-add the quantity to the selector
 	}
-	p.pendingDraws = make(map[string]int)
+	// p.pendingDraws = make(map[string]int)
+	clear(p.pendingDraws)
 }
 
 // ApplyDrawLog decrements the quantity for a given itemID if available (internal use only)
diff --git a/tiny-reward-pool-go/internal/types/types.go b/tiny-reward-pool-go/internal/types/types.go
index 821691e..d0183b9 100644
--- a/tiny-reward-pool-go/internal/types/types.go
+++ b/tiny-reward-pool-go/internal/types/types.go
@@ -86,6 +86,8 @@ type WAL interface {
 	Close() error
 	// Rotate file
 	Rotate(path string) error
+	// Reset buffer
+	Reset()
 }
 
 // Config interface
diff --git a/tiny-reward-pool-go/internal/utils/test_utils.go b/tiny-reward-pool-go/internal/utils/test_utils.go
index 63be95f..5047d9d 100644
--- a/tiny-reward-pool-go/internal/utils/test_utils.go
+++ b/tiny-reward-pool-go/internal/utils/test_utils.go
@@ -30,11 +30,13 @@ var _ rand.Source = (*MockRandSource)(nil)
 
 type MockWAL struct{}
 
+var _ types.WAL = (*MockWAL)(nil)
+
 func (m *MockWAL) LogDraw(item types.WalLogDrawItem) error { return nil }
 func (m *MockWAL) Close() error                            { return nil }
 func (m *MockWAL) Flush() error                            { return nil }
-func (m *MockWAL) SetSnapshotPath(path string)             {}
 func (m *MockWAL) Rotate(path string) error                { return nil }
+func (m *MockWAL) Reset()                                  {}
 
 // MockUtils is a mock implementation of the types.Utils interface for testing.
 type MockUtils struct{}
diff --git a/tiny-reward-pool-go/internal/wal/wal.go b/tiny-reward-pool-go/internal/wal/wal.go
index db6fc00..c89b0e0 100644
--- a/tiny-reward-pool-go/internal/wal/wal.go
+++ b/tiny-reward-pool-go/internal/wal/wal.go
@@ -63,6 +63,10 @@ func (w *WAL) Close() error {
 	return w.storage.Close()
 }
 
+func (w *WAL) Reset() {
+	w.buffer = w.buffer[:0]
+}
+
 func (w *WAL) Rotate(path string) error {
 	return w.storage.Rotate(path)
 }
